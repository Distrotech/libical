netical_wrap.c

[ Module : Net__ICal__Libical, Package : Net::ICal::Libical ]


icalparser_parse_string(str);
        [ returns icalcomponent * ]

icalcomponent_new(kind);
        [ returns icalcomponent * ]

icalcomponent_new_clone(component);
        [ returns icalcomponent * ]

icalcomponent_new_from_string(str);
        [ returns icalcomponent * ]

icalcomponent_as_ical_string(component);
        [ returns char * ]

icalcomponent_free(component);
        [ returns void  ]

icalcomponent_count_errors(component);
        [ returns int  ]

icalcomponent_strip_errors(component);
        [ returns void  ]

icalcomponent_convert_errors(component);
        [ returns void  ]

icalcomponent_get_current_property(component);
        [ returns icalproperty * ]

icalcomponent_get_first_property(component,kind);
        [ returns icalproperty * ]

icalcomponent_get_next_property(component,kind);
        [ returns icalproperty * ]

icalcomponent_get_current_component(component);
        [ returns icalcomponent * ]

icalcomponent_get_first_component(component,kind);
        [ returns icalcomponent * ]

icalcomponent_get_next_component(component,kind);
        [ returns icalcomponent * ]

icalcomponent_get_parent(component);
        [ returns icalcomponent * ]

icalcomponent_isa(component);
        [ returns icalcomponent_kind  ]

icalrestriction_check(comp);
        [ returns int  ]

$ICAL_BADARG_ERROR = ICAL_BADARG_ERROR
        [ Constant: int  ]

$ICAL_NEWFAILED_ERROR = ICAL_NEWFAILED_ERROR
        [ Constant: int  ]

$ICAL_MALFORMEDDATA_ERROR = ICAL_MALFORMEDDATA_ERROR
        [ Constant: int  ]

$ICAL_PARSE_ERROR = ICAL_PARSE_ERROR
        [ Constant: int  ]

$ICAL_INTERNAL_ERROR = ICAL_INTERNAL_ERROR
        [ Constant: int  ]
        Like assert --internal consist. prob 

$ICAL_FILE_ERROR = ICAL_FILE_ERROR
        [ Constant: int  ]

$ICAL_ALLOCATION_ERROR = ICAL_ALLOCATION_ERROR
        [ Constant: int  ]

$ICAL_USAGE_ERROR = ICAL_USAGE_ERROR
        [ Constant: int  ]

$ICAL_NO_ERROR = ICAL_NO_ERROR
        [ Constant: int  ]

$ICAL_MULTIPLEINCLUSION_ERROR = ICAL_MULTIPLEINCLUSION_ERROR
        [ Constant: int  ]

$ICAL_TIMEDOUT_ERROR = ICAL_TIMEDOUT_ERROR
        [ Constant: int  ]
        Used for problems in input to icalerror_strerror() 

$ICAL_UNKNOWN_ERROR = ICAL_UNKNOWN_ERROR
        [ Constant: int  ]

$ICAL_ERROR_FATAL = ICAL_ERROR_FATAL
        [ Constant: int  ]
        Not fata 

$ICAL_ERROR_NONFATAL = ICAL_ERROR_NONFATAL
        [ Constant: int  ]
        Fatal 

$ICAL_ERROR_DEFAULT = ICAL_ERROR_DEFAULT
        [ Constant: int  ]
        Use the value of icalerror_errors_are_fatal Asked state for an unknown
        error type 

$ICAL_ERROR_UNKNOWN = ICAL_ERROR_UNKNOWN
        [ Constant: int  ]

icalerror_set_error_state(error,icalerrorstate );
        [ returns void  ]

icalerror_get_error_state(error);
        [ returns icalerrorstate  ]

icalenum_property_kind_to_string(kind);
        [ returns char * ]

icalenum_string_to_property_kind(string);
        [ returns icalproperty_kind  ]

icalenum_value_kind_to_string(kind);
        [ returns char * ]

icalenum_value_kind_by_prop(kind);
        [ returns icalvalue_kind  ]

icalenum_parameter_kind_to_string(kind);
        [ returns char * ]

icalenum_string_to_parameter_kind(string);
        [ returns icalparameter_kind  ]

icalenum_component_kind_to_string(kind);
        [ returns char * ]

icalenum_string_to_component_kind(string);
        [ returns icalcomponent_kind  ]

icalenum_property_kind_to_value_kind(kind);
        [ returns icalvalue_kind  ]

icallangbind_new_array(size);
        [ returns int * ]

icallangbind_free_array(array);
        [ returns void  ]

icallangbind_access_array(array,index);
        [ returns int  ]

icalrecur_expand_recurrence(rule,start,count,array);
        [ returns int  ]

icallangbind_get_property(c,n,prop);
        [ returns icalproperty * ]

icallangbind_get_property_val(p);
        [ returns char * ]

icallangbind_get_parameter(p,parameter);
        [ returns char * ]

icallangbind_get_component(c,comp);
        [ returns icalcomponent * ]

